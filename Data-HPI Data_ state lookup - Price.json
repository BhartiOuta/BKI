{"id":"2J4UFQE98","name":"HPI Data_ state lookup - Price","path":"WRK-559a2617-14f1-4ccf-8f75-a2cc717693fd/HPI Data_ state lookup - Price","date_created":"2023-07-11 13:25:58","date_modified":"2023-07-12 17:03:33","recent_executed_date":"2023-07-11 17:50:10","isRenaming":false,"inTrash":false,"displayInTrash":true,"isOptionsMenuOpen":false,"isShared":false,"modelType":"NotebookItem","isConnectionError":false,"config":{"cron":"","cronExecutingUser":"anonymous","releaseresource":false,"splitViewMode":"compact","expandViewMode":"BOTH","stillImporting":false,"cronSettings":null,"sharedOnDate":"","inTrash":false,"creationTime":"2023-07-11 13:25:58"},"info":{},"paragraphs":[{"id":"20230430-155600_1018355186","jobName":"paragraph_1689081957407_1283136203","progressUpdateIntervalMs":500,"status":"FINISHED","isSaved":true,"isSaving":false,"isUpdatingResults":false,"user":"[USER_NAME]","title":"Paragraph 14","text":"%md\n## Report Description\n#\n#### Datasets Used: \ncore_industry_cube - derived from *'BKDS data'* \nThe Black Knight Home Price Index table provides a comprehensive view of all historical data, geographies, property types, and price tiers.\n\nThe Home Price Index (HPI) is a statistical model that estimates the median home prices for various geographic areas, such as the national, state, metropolitan statistical areas (MSAs), and counties. It also provides data for over 20,000 zip codes. The HPI is calculated on a month-over-month basis, providing a timely estimate of changes in home prices.\n\nOverall, the HPI is a valuable tool for analyzing trends in the housing market and for making informed decisions related to buying, selling, or investing in real estate.\n<br />\n#### Description:\nThis notebook contains HPI data. These data set can be subset on bases of User Input\n1. Desired Date Range (yyyymm)\n2. Geographies(Aggtypename)\n3. Property Type( All property Types/Condo/Single Family/)\n4. States\n\nThe data in the HPI (Home Price Index) is sliced by users who apply filters via the included form filters. Power BI can be refreshed to display the respective data fields and charts","errorMessage":"","editMode":false,"results":{"code":"SUCCESS","msg":[{"data":"<h2>Report Description</h2>\n<h1></h1>\n<h4>Datasets Used:</h4>\n<p>core_industry_cube - derived from <em>'BKDS data'</em>\n<br  />The Black Knight Home Price Index table provides a comprehensive view of all historical data, geographies, property types, and price tiers.</p>\n<p>The Home Price Index (HPI) is a statistical model that estimates the median home prices for various geographic areas, such as the national, state, metropolitan statistical areas (MSAs), and counties. It also provides data for over 20,000 zip codes. The HPI is calculated on a month-over-month basis, providing a timely estimate of changes in home prices.</p>\n<p>Overall, the HPI is a valuable tool for analyzing trends in the housing market and for making informed decisions related to buying, selling, or investing in real estate.\n<br  /><br  /></p>\n<h4>Description:</h4>\n<p>This notebook contains HPI data. These data set can be subset on bases of User Input</p>\n<ol>\n<li>Desired Date Range (yyyymm)</li>\n<li>Geographies(Aggtypename)</li>\n<li>Property Type( All property Types/Condo/Single Family/)</li>\n<li>States</li>\n</ol>\n<p>The data in the HPI (Home Price Index) is sliced by users who apply filters via the included form filters. Power BI can be refreshed to display the respective data fields and charts</p>\n","type":"HTML"}]},"config":{"contentHeightCode":0,"contentHeightResult":0,"enabled":true,"expanded":true,"showCode":true,"showResults":true,"results":[{"bkfsRap":{"chartMode":"table","xColumn":null,"yColumn":null,"sizeColumn":null,"grouping":null,"variantChart":null,"pivotTable":{"cols":[],"rows":[],"vals":[]},"chartColors":{"lineChart":[],"multiBarChart":[],"pieChart":[],"pivotTable":[],"scatterChart":[],"stackedAreaChart":[]}}}]},"expandedConfig":null,"settings":{"params":{},"forms":{}},"progress":null,"dateStarted":"2023-07-12T15:40:12+0000","dateFinished":null,"lastCompletedTime":"2023-07-11 17:47:26","interpreter":"md","name":"Paragraph 14","dateUpdated":null,"apps":[],"dateCreated":null,"update":true},{"id":"20230503-154304_716910571","jobName":"paragraph_1689081957468_1258127525","progressUpdateIntervalMs":500,"status":"FINISHED","isSaved":true,"isSaving":false,"isUpdatingResults":false,"user":"Bharti_Jhalani","title":"Import Data Dependencies  ","text":"%spark2.pyspark\n#Pyspark Libraries\nfrom pyspark.sql.functions import concat, sum, when, lit, col, avg, round, coalesce, count, lag\nfrom pyspark.sql.types import DecimalType\nfrom pyspark.sql.window import Window\n\n#Charting Libraries\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport matplotlib.style as style \nfrom matplotlib.ticker import FuncFormatter\n# import seaborn as sns\n\n#Matplotlib config\nstyle.use('seaborn-poster')\nstyle.use('dark_background')\n# sns.set_palette('Spectral')\n\n#Pandas Config\npd.set_option('display.max_rows', 500)\npd.set_option('display.max_columns', 500)\npd.set_option('display.width', 1000)\n\n\nfrom pyspark.sql.functions import col\nimport pyspark.sql.functions as F\n\n","errorMessage":"","editMode":false,"results":null,"config":{"contentHeightCode":0,"contentHeightResult":0,"enabled":true,"expanded":true,"showCode":true,"showResults":true,"results":[]},"expandedConfig":null,"settings":{"params":{},"forms":{}},"progress":null,"dateStarted":"2023-07-12T15:40:13+0000","dateFinished":null,"lastCompletedTime":"2023-07-11 17:47:27","interpreter":"spark2.pyspark","name":"Import Data Dependencies  ","dateUpdated":null,"apps":[],"dateCreated":null,"update":true},{"id":"20230430-155629_402523214","jobName":"paragraph_1689081957539_1318533102","progressUpdateIntervalMs":500,"status":"FINISHED","isSaved":true,"isSaving":false,"isUpdatingResults":false,"user":"Bharti_Jhalani","title":"Read HPI data from BKFS database","text":"%spark2.pyspark\ndf = spark.sql(\"SELECT * FROM hpi.chpi\")\nz.show(df)","errorMessage":"","editMode":false,"results":{"code":"SUCCESS","msg":[{"data":"{\"paragraphId\":\"2J4UFQE98_20230430-155629_402523214\",\"dataframeUri\":\"/zeppelin/select?q=ParagraphId:2J4UFQE98_20230430-155629_402523214\"}\n","type":"TEXT"}]},"config":{"contentHeightCode":0,"contentHeightResult":0,"enabled":true,"expanded":true,"showCode":true,"showResults":true,"results":[{"bkfsRap":{"chartMode":"table","xColumn":null,"yColumn":null,"sizeColumn":null,"grouping":null,"variantChart":null,"pivotTable":{"cols":[],"rows":[],"vals":[]},"chartColors":{"lineChart":[],"multiBarChart":[],"pieChart":[],"pivotTable":[],"scatterChart":[],"stackedAreaChart":[]}}}]},"expandedConfig":null,"settings":{"params":{},"forms":{}},"progress":null,"dateStarted":"2023-07-12T15:40:13+0000","dateFinished":null,"lastCompletedTime":"2023-07-11 17:47:27","interpreter":"spark2.pyspark","name":"Read HPI data from BKFS database","dateUpdated":null,"apps":[],"dateCreated":null},{"id":"20230428-153406_1972966267","jobName":"paragraph_1689081957593_1308529631","progressUpdateIntervalMs":500,"status":"FINISHED","isSaved":true,"isSaving":false,"isUpdatingResults":false,"user":"Bharti_Jhalani","title":" Get row count","text":"%spark2.pyspark\n# Get row count\nrows = df.count()\nprint(f\"DataFrame Rows count : {rows}\")","errorMessage":"","editMode":false,"results":{"code":"SUCCESS","msg":[{"data":"DataFrame Rows count : 49975494\n","type":"TEXT"}]},"config":{"contentHeightCode":0,"contentHeightResult":0,"enabled":true,"expanded":true,"showCode":true,"showResults":true,"results":[{"bkfsRap":{"chartMode":"table","xColumn":null,"yColumn":null,"sizeColumn":null,"grouping":null,"variantChart":null,"pivotTable":{"cols":[],"rows":[],"vals":[]},"chartColors":{"lineChart":[],"multiBarChart":[],"pieChart":[],"pivotTable":[],"scatterChart":[],"stackedAreaChart":[]}}}]},"expandedConfig":null,"settings":{"params":{},"forms":{}},"progress":null,"dateStarted":"2023-07-12T15:40:14+0000","dateFinished":null,"lastCompletedTime":"2023-07-11 17:47:38","interpreter":"spark2.pyspark","name":" Get row count","dateUpdated":null,"apps":[],"dateCreated":null,"update":true},{"id":"20230712-145507_808269298","jobName":"paragraph_1689173707889_784729790","progressUpdateIntervalMs":500,"status":"READY","isSaved":true,"isSaving":false,"isUpdatingResults":false,"user":"Bharti_Jhalani","title":"Paragraph 21","text":"%spark2.pyspark\n","errorMessage":null,"editMode":false,"results":null,"config":{"contentHeightCode":0,"contentHeightResult":0,"enabled":true,"expanded":true,"showCode":true,"showResults":true,"results":[]},"expandedConfig":null,"settings":{"params":{},"forms":{}},"progress":null,"dateStarted":null,"dateFinished":null,"lastCompletedTime":"","interpreter":"spark2.pyspark","dateUpdated":null,"apps":[],"dateCreated":null,"update":true},{"id":"20230430-213501_1380801784","jobName":"paragraph_1689081957647_1375475940","progressUpdateIntervalMs":500,"status":"FINISHED","isSaved":true,"isSaving":false,"isUpdatingResults":false,"user":"Bharti_Jhalani","title":"Calculations for columns (REO sales & Short Sales","text":"%spark2.pyspark\ncol_pairs = [(\"aggregatedhpi\", \"aggregatedshortsalehpiadjustment\"), (\"aggregatedhpi\", \"aggregatedreoadjustment\"),(\"pricetier1\", \"reohpiadjustmenttier1\"),(\"pricetier2\", \"reohpiadjustmenttier2\"),(\"pricetier3\", \"reohpiadjustmenttier3\"),(\"pricetier4\", \"reohpiadjustmenttier4\"),(\"pricetier5\", \"reohpiadjustmenttier5\"),(\"pricetier1\", \"shortsalehpiadjustmenttier1\"),(\"pricetier2\", \"shortsalehpiadjustmenttier2\"),(\"pricetier3\", \"shortsalehpiadjustmenttier3\"),(\"pricetier4\", \"shortsalehpiadjustmenttier4\"),(\"pricetier5\", \"shortsalehpiadjustmenttier5\")]\n\nfrom pyspark.sql.functions import col\n\ndef add_multiply_columns(df, col_pairs):\n    for pair in col_pairs:\n        col_name = pair[0] + \"_\" + pair[1] + \"_P\"\n        df = df.withColumn(col_name, col(pair[0]) * col(pair[1]))\n    return df\ndf = add_multiply_columns(df, col_pairs)\nz.show(df)","errorMessage":"","editMode":false,"results":{"code":"SUCCESS","msg":[{"data":"{\"paragraphId\":\"2J4UFQE98_20230430-213501_1380801784\",\"dataframeUri\":\"/zeppelin/select?q=ParagraphId:2J4UFQE98_20230430-213501_1380801784\"}\n","type":"TEXT"}]},"config":{"contentHeightCode":0,"contentHeightResult":0,"enabled":true,"expanded":true,"showCode":true,"showResults":true,"results":[{"bkfsRap":{"chartMode":"table","xColumn":null,"yColumn":null,"sizeColumn":null,"grouping":null,"variantChart":null,"pivotTable":{"cols":[],"rows":[],"vals":[]},"chartColors":{"lineChart":[],"multiBarChart":[],"pieChart":[],"pivotTable":[],"scatterChart":[],"stackedAreaChart":[]}}}]},"expandedConfig":null,"settings":{"params":{},"forms":{}},"progress":null,"dateStarted":"2023-07-12T15:40:38+0000","dateFinished":null,"lastCompletedTime":"2023-07-11 17:47:38","interpreter":"spark2.pyspark","name":"Calculations for columns (REO sales & Short Sales","dateUpdated":null,"apps":[],"dateCreated":null},{"id":"20230502-162806_1047902624","jobName":"paragraph_1689081957706_1352775754","progressUpdateIntervalMs":500,"status":"FINISHED","isSaved":true,"isSaving":false,"isUpdatingResults":false,"user":"Bharti_Jhalani","title":"Lookup table","text":"%spark2.pyspark\nfrom pyspark.sql.functions import col\n\n# Load data into a DataFrame\n#df = spark.sql(\"SELECT * FROM hpi.chpi\")\nlookup_table = spark.sql(\"SELECT * FROM hpi.agg_value_lookup\")\n\n# Rename columns in lookup_table by adding '_lookup' suffix\nlookup_table = lookup_table.select([col(c).alias(c + '_Lookup') for c in lookup_table.columns])","errorMessage":"","editMode":false,"results":null,"config":{"contentHeightCode":0,"contentHeightResult":0,"enabled":true,"expanded":true,"showCode":true,"showResults":true,"results":[]},"expandedConfig":null,"settings":{"params":{},"forms":{}},"progress":null,"dateStarted":"2023-07-12T15:40:46+0000","dateFinished":null,"lastCompletedTime":"2023-07-11 17:47:38","interpreter":"spark2.pyspark","name":"Lookup table","dateUpdated":null,"apps":[],"dateCreated":null,"update":true},{"id":"20230502-162845_1368672883","jobName":"paragraph_1689081957767_1427801790","progressUpdateIntervalMs":500,"status":"FINISHED","isSaved":true,"isSaving":false,"isUpdatingResults":false,"user":"Bharti_Jhalani","title":"Merge Lookup and HPI ","text":"%spark2.pyspark\nfrom pyspark.sql.functions import concat\n\n# Assume your DataFrame is named 'df' and you want to concatenate columns 'col1' and 'col2'\ndf = df.withColumn('lookupcol', concat(df.aggtypename, df.aggvaluecode))\n\n\nlookup_table = lookup_table.withColumn('lookupcol', concat(lookup_table.aggtypename_Lookup, lookup_table.aggvaluecode_Lookup))\n\n#aggtypecode_table2\n# Join the two tables based on the common column 'aggvaluecode'\n#result_table = df.join(lookup_table, df.lookupcol == lookup_table.lookupcol_table2, 'left')\n\ndf = df.join(lookup_table, ['lookupcol'], 'left')\nz.show(df)\n","errorMessage":"","editMode":false,"results":{"code":"SUCCESS","msg":[{"data":"{\"paragraphId\":\"2J4UFQE98_20230502-162845_1368672883\",\"dataframeUri\":\"/zeppelin/select?q=ParagraphId:2J4UFQE98_20230502-162845_1368672883\"}\n","type":"TEXT"}]},"config":{"contentHeightCode":0,"contentHeightResult":0,"enabled":true,"expanded":true,"showCode":true,"showResults":true,"results":[{"bkfsRap":{"chartMode":"table","xColumn":null,"yColumn":null,"sizeColumn":null,"grouping":null,"variantChart":null,"pivotTable":{"cols":[],"rows":[],"vals":[]},"chartColors":{"lineChart":[],"multiBarChart":[],"pieChart":[],"pivotTable":[],"scatterChart":[],"stackedAreaChart":[]}}}]},"expandedConfig":null,"settings":{"params":{},"forms":{}},"progress":null,"dateStarted":"2023-07-12T15:41:12+0000","dateFinished":null,"lastCompletedTime":"2023-07-11 17:47:39","interpreter":"spark2.pyspark","name":"Merge Lookup and HPI ","dateUpdated":null,"apps":[],"dateCreated":null},{"id":"20230428-170153_605554225","jobName":"paragraph_1689081957829_1402408363","progressUpdateIntervalMs":500,"status":"FINISHED","isSaved":true,"isSaving":false,"isUpdatingResults":false,"user":"Bharti_Jhalani","title":"Date_Range USER_INPUT","text":"%spark2.pyspark\n# Set display options\npd.set_option('display.max_rows', 500)\npd.set_option('display.max_columns', 500)\npd.set_option('display.width', 1000)\n\n# Load data into a DataFrame\n#df = spark.sql(\"SELECT * FROM my_table\")\n\n# Define widget inputs\nmin_date = z.input('Enter Min Date (yyyymm):')\nmax_date = z.input('Enter Max Date (yyyymm):')\n\n\n# Filter data based on widget inputs\ndf_filtered = df.filter((df.dateyyyymm >= min_date) & (df.dateyyyymm <= max_date))\n\n# Display filtered DataFrame\n\n#df_filtered.show()\n","errorMessage":"","editMode":false,"results":null,"config":{"contentHeightCode":0,"contentHeightResult":0,"enabled":true,"expanded":true,"showCode":true,"showResults":true,"results":[]},"expandedConfig":null,"settings":{"params":{"Enter Min Date (yyyymm):":"201801","Enter Max Date (yyyymm):":"202212"},"forms":{"Enter Min Date (yyyymm):":{"name":"Enter Min Date (yyyymm):","displayName":"Enter Min Date (yyyymm):","type":"input","defaultValue":"","hidden":false},"Enter Max Date (yyyymm):":{"name":"Enter Max Date (yyyymm):","displayName":"Enter Max Date (yyyymm):","type":"input","defaultValue":"","hidden":false}}},"progress":null,"dateStarted":"2023-07-12T15:41:13+0000","dateFinished":null,"lastCompletedTime":"2023-07-11 17:47:39","interpreter":"spark2.pyspark","name":"Date_Range USER_INPUT","dateUpdated":null,"apps":[],"dateCreated":null,"update":true},{"id":"20230428-171652_1217726145","jobName":"paragraph_1689081957882_1395867631","progressUpdateIntervalMs":500,"status":"FINISHED","isSaved":true,"isSaving":false,"isUpdatingResults":false,"user":"Bharti_Jhalani","title":"Paragraph 10","text":"%spark2.pyspark\n# Get row count\nrows = df_filtered.count()\nprint(f\"DataFrame Rows count : {rows}\")\n#df.propertytypename.isin(list(z.checkbox('Property Type',propertytypename_Distinct)))\n\n#df.aggtypename.isin(list(z.checkbox('aggtypename',aggtypename_Distinct)))\n\n#df.aggvaluename.isin(list(z.checkbox('aggvaluename',aggvaluename_Distinct)))","errorMessage":"","editMode":false,"results":{"code":"SUCCESS","msg":[{"data":"DataFrame Rows count : 6708120\n","type":"TEXT"}]},"config":{"contentHeightCode":0,"contentHeightResult":0,"enabled":true,"expanded":false,"showCode":true,"showResults":true,"results":[{"bkfsRap":{"chartMode":"table","xColumn":null,"yColumn":null,"sizeColumn":null,"grouping":null,"variantChart":null,"pivotTable":{"cols":[],"rows":[],"vals":[]},"chartColors":{"lineChart":[],"multiBarChart":[],"pieChart":[],"pivotTable":[],"scatterChart":[],"stackedAreaChart":[]}}}]},"expandedConfig":null,"settings":{"params":{},"forms":{}},"progress":null,"dateStarted":"2023-07-12T15:42:09+0000","dateFinished":null,"lastCompletedTime":"2023-07-11 17:47:47","interpreter":"spark2.pyspark","name":"Paragraph 10","dateUpdated":null,"apps":[],"dateCreated":null,"update":true},{"id":"20230501-214810_558182491","jobName":"paragraph_1689081957937_1077680291","progressUpdateIntervalMs":500,"status":"FINISHED","isSaved":true,"isSaving":false,"isUpdatingResults":false,"user":"Bharti_Jhalani","title":"User Input for Geographies and Property Type","text":"%spark2.pyspark\n\n\nimport pyspark.sql.functions as F\nimport pandas as pd\n\n# Define widget options\naggtypename_Distinct = [[str(i[0]),str(i[0])] for i in df_filtered.select('aggtypename').distinct().sort('aggtypename').collect()]\npropertytypename_Distinct = [[str(i[0]),str(i[0])] for i in df_filtered.select('propertytypename').distinct().sort('propertytypename').collect()]\n\n# Define widget inputs\naggtypename_input = z.checkbox('Select Agg Type Name:', aggtypename_Distinct)\npropertytypename_input = z.checkbox('Select Property Type Name:', propertytypename_Distinct)\n\n# Filter data based on widget inputs\ndf_core = df_filtered.filter(\n    (df_filtered.propertytypename.isin(list(propertytypename_input))) &\n    (df_filtered.aggtypename.isin(list(aggtypename_input)))\n)\n\n# Display filtered DataFrame\n#df_core.show()\n","errorMessage":"","editMode":false,"results":null,"config":{"contentHeightCode":0,"contentHeightResult":0,"enabled":true,"expanded":true,"showCode":true,"showResults":true,"results":[]},"expandedConfig":null,"settings":{"params":{"Select Property Type Name:":["All Property Types","Single Family"],"Select Agg Type Name:":["ZipCode"]},"forms":{"Select Agg Type Name:":{"name":"Select Agg Type Name:","displayName":"Select Agg Type Name:","type":"checkbox","defaultValue":["CBSA","CensusDivision","CensusRegion","City","County","MSA","Nation","State","ZipCode"],"options":[{"value":"CBSA","displayName":"CBSA"},{"value":"CensusDivision","displayName":"CensusDivision"},{"value":"CensusRegion","displayName":"CensusRegion"},{"value":"City","displayName":"City"},{"value":"County","displayName":"County"},{"value":"MSA","displayName":"MSA"},{"value":"Nation","displayName":"Nation"},{"value":"State","displayName":"State"},{"value":"ZipCode","displayName":"ZipCode"}],"hidden":false},"Select Property Type Name:":{"name":"Select Property Type Name:","displayName":"Select Property Type Name:","type":"checkbox","defaultValue":["All Property Types","Condo","Single Family"],"options":[{"value":"All Property Types","displayName":"All Property Types"},{"value":"Condo","displayName":"Condo"},{"value":"Single Family","displayName":"Single Family"}],"hidden":false}}},"progress":null,"dateStarted":"2023-07-12T15:42:10+0000","dateFinished":null,"lastCompletedTime":"2023-07-11 17:47:58","interpreter":"spark2.pyspark","name":"User Input for Geographies and Property Type","dateUpdated":null,"apps":[],"dateCreated":null,"update":true},{"id":"20230430-183957_1633204734","jobName":"paragraph_1689081957992_1044207137","progressUpdateIntervalMs":500,"status":"FINISHED","isSaved":true,"isSaving":false,"isUpdatingResults":false,"user":"Bharti_Jhalani","title":"Paragraph 16","text":"%spark2.pyspark\n# Get row count\nrows = df_core.count()\nprint(f\"DataFrame Rows count : {rows}\")","errorMessage":"","editMode":false,"results":{"code":"SUCCESS","msg":[{"data":"DataFrame Rows count : 2714880\n","type":"TEXT"}]},"config":{"contentHeightCode":0,"contentHeightResult":0,"enabled":true,"expanded":true,"showCode":true,"showResults":true,"results":[{"bkfsRap":{"chartMode":"table","xColumn":null,"yColumn":null,"sizeColumn":null,"grouping":null,"variantChart":null,"pivotTable":{"cols":[],"rows":[],"vals":[]},"chartColors":{"lineChart":[],"multiBarChart":[],"pieChart":[],"pivotTable":[],"scatterChart":[],"stackedAreaChart":[]}}}]},"expandedConfig":null,"settings":{"params":{},"forms":{}},"progress":null,"dateStarted":"2023-07-12T15:42:15+0000","dateFinished":null,"lastCompletedTime":"2023-07-11 17:48:01","interpreter":"spark2.pyspark","name":"Paragraph 16","dateUpdated":null,"apps":[],"dateCreated":null,"update":true},{"id":"20230502-171218_1525748059","jobName":"paragraph_1689081958048_1121156917","progressUpdateIntervalMs":500,"status":"FINISHED","isSaved":true,"isSaving":false,"isUpdatingResults":false,"user":"Bharti_Jhalani","title":"Paragraph 20","text":"%spark2.pyspark\nz.show(df_core)","errorMessage":"","editMode":false,"results":{"code":"SUCCESS","msg":[{"data":"{\"paragraphId\":\"2J4UFQE98_20230502-171218_1525748059\",\"dataframeUri\":\"/zeppelin/select?q=ParagraphId:2J4UFQE98_20230502-171218_1525748059\"}\n","type":"TEXT"}]},"config":{"contentHeightCode":0,"contentHeightResult":0,"enabled":true,"expanded":true,"showCode":true,"showResults":false,"results":[{"bkfsRap":{"chartMode":"table","xColumn":null,"yColumn":null,"sizeColumn":null,"grouping":null,"variantChart":null,"pivotTable":{"cols":[],"rows":[],"vals":[]},"chartColors":{"lineChart":[],"multiBarChart":[],"pieChart":[],"pivotTable":[],"scatterChart":[],"stackedAreaChart":[]}}}]},"expandedConfig":null,"settings":{"params":{},"forms":{}},"progress":null,"dateStarted":"2023-07-12T15:42:23+0000","dateFinished":null,"lastCompletedTime":"2023-07-11 17:48:40","interpreter":"spark2.pyspark","name":"Paragraph 20","dateUpdated":null,"apps":[],"dateCreated":null},{"id":"20230502-150411_979338199","jobName":"paragraph_1689081958101_1113077190","progressUpdateIntervalMs":500,"status":"FINISHED","isSaved":true,"isSaving":false,"isUpdatingResults":false,"user":"Bharti_Jhalani","title":"User Input for State","text":"%spark2.pyspark\n\n\nimport pyspark.sql.functions as F\nimport pandas as pd\n\n# Define widget options\n#aggtypename_Distinct = [[str(i[0]),str(i[0])] for i in result_table.select('statecode_table2').distinct().sort('statecode_table2').collect()]\npropertytypename_Distinct = [[str(i[0]),str(i[0])] for i in df_core.select('propertystate_Lookup').distinct().sort('propertystate_Lookup').collect()]\n#propertystate_Lookup\n# Define widget inputs\n#aggtypename_input = z.checkbox('Select State Code:', aggtypename_Distinct)\npropertytypename_input = z.checkbox('Select Property State Name:', propertytypename_Distinct)\n\n# Filter data based on widget inputs\ndf_core_State_P = df_core.filter(\n    (df_core.propertystate_Lookup.isin(list(propertytypename_input))) \n)\n\n# Display filtered DataFrame\nz.show(df_core_State_P)\n","errorMessage":"","editMode":false,"results":{"code":"SUCCESS","msg":[{"data":"{\"paragraphId\":\"2J4UFQE98_20230502-150411_979338199\",\"dataframeUri\":\"/zeppelin/select?q=ParagraphId:2J4UFQE98_20230502-150411_979338199\"}\n","type":"TEXT"}]},"config":{"contentHeightCode":0,"contentHeightResult":0,"enabled":true,"expanded":true,"showCode":true,"showResults":true,"results":[{"bkfsRap":{"chartMode":"table","xColumn":null,"yColumn":null,"sizeColumn":null,"grouping":null,"variantChart":null,"pivotTable":{"cols":[],"rows":[],"vals":[]},"chartColors":{"lineChart":[],"multiBarChart":[],"pieChart":[],"pivotTable":[],"scatterChart":[],"stackedAreaChart":[]}}}]},"expandedConfig":null,"settings":{"params":{"Select Property State Name:":["CO"],"Select State Code:":["1","2","4","5","6","8","9","10","11","12","13","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","44","45","46","47","48","49","50","51","53","54","55","56"]},"forms":{"Select Property State Name:":{"name":"Select Property State Name:","displayName":"Select Property State Name:","type":"checkbox","defaultValue":["None","AK","AL","AR","AZ","CA","CO","CT","DC","DE","FL","GA","HI","IA","ID","IL","IN","KS","KY","LA","MA","MD","ME","MI","MN","MO","MS","MT","NC","ND","NE","NH","NJ","NM","NV","NY","OH","OK","OR","PA","RI","SC","SD","TN","TX","UT","VA","VT","WA","WI","WV","WY"],"options":[{"value":"None","displayName":"None"},{"value":"AK","displayName":"AK"},{"value":"AL","displayName":"AL"},{"value":"AR","displayName":"AR"},{"value":"AZ","displayName":"AZ"},{"value":"CA","displayName":"CA"},{"value":"CO","displayName":"CO"},{"value":"CT","displayName":"CT"},{"value":"DC","displayName":"DC"},{"value":"DE","displayName":"DE"},{"value":"FL","displayName":"FL"},{"value":"GA","displayName":"GA"},{"value":"HI","displayName":"HI"},{"value":"IA","displayName":"IA"},{"value":"ID","displayName":"ID"},{"value":"IL","displayName":"IL"},{"value":"IN","displayName":"IN"},{"value":"KS","displayName":"KS"},{"value":"KY","displayName":"KY"},{"value":"LA","displayName":"LA"},{"value":"MA","displayName":"MA"},{"value":"MD","displayName":"MD"},{"value":"ME","displayName":"ME"},{"value":"MI","displayName":"MI"},{"value":"MN","displayName":"MN"},{"value":"MO","displayName":"MO"},{"value":"MS","displayName":"MS"},{"value":"MT","displayName":"MT"},{"value":"NC","displayName":"NC"},{"value":"ND","displayName":"ND"},{"value":"NE","displayName":"NE"},{"value":"NH","displayName":"NH"},{"value":"NJ","displayName":"NJ"},{"value":"NM","displayName":"NM"},{"value":"NV","displayName":"NV"},{"value":"NY","displayName":"NY"},{"value":"OH","displayName":"OH"},{"value":"OK","displayName":"OK"},{"value":"OR","displayName":"OR"},{"value":"PA","displayName":"PA"},{"value":"RI","displayName":"RI"},{"value":"SC","displayName":"SC"},{"value":"SD","displayName":"SD"},{"value":"TN","displayName":"TN"},{"value":"TX","displayName":"TX"},{"value":"UT","displayName":"UT"},{"value":"VA","displayName":"VA"},{"value":"VT","displayName":"VT"},{"value":"WA","displayName":"WA"},{"value":"WI","displayName":"WI"},{"value":"WV","displayName":"WV"},{"value":"WY","displayName":"WY"}],"hidden":false}}},"progress":null,"dateStarted":"2023-07-12T15:48:06+0000","dateFinished":null,"lastCompletedTime":"2023-07-11 17:48:44","interpreter":"spark2.pyspark","name":"User Input for State","dateUpdated":null,"apps":[],"dateCreated":null},{"id":"20230502-160749_252894735","jobName":"paragraph_1689081958154_1180408247","progressUpdateIntervalMs":500,"status":"FINISHED","isSaved":true,"isSaving":false,"isUpdatingResults":false,"user":"Bharti_Jhalani","title":"Paragraph 31","text":"%spark2.pyspark\n# Get column count\ncols = len(df_core_State_P.columns)\nprint(f\"DataFrame Columns count : {cols}\")\n\n# Get row count\nrows = df_core_State_P.count()\nprint(f\"DataFrame Rows count : {rows}\")","errorMessage":"","editMode":false,"results":{"code":"SUCCESS","msg":[{"data":"DataFrame Columns count : 66\nDataFrame Rows count : 49620\n","type":"TEXT"}]},"config":{"contentHeightCode":0,"contentHeightResult":0,"enabled":true,"expanded":true,"showCode":true,"showResults":true,"results":[{"bkfsRap":{"chartMode":"table","xColumn":null,"yColumn":null,"sizeColumn":null,"grouping":null,"variantChart":null,"pivotTable":{"cols":[],"rows":[],"vals":[]},"chartColors":{"lineChart":[],"multiBarChart":[],"pieChart":[],"pivotTable":[],"scatterChart":[],"stackedAreaChart":[],"table":null}}}]},"expandedConfig":null,"settings":{"params":{},"forms":{}},"progress":null,"dateStarted":"2023-07-12T15:48:14+0000","dateFinished":null,"lastCompletedTime":"2023-07-11 17:48:47","interpreter":"spark2.pyspark","name":"Paragraph 31","dateUpdated":null,"apps":[],"dateCreated":null,"update":true},{"id":"20230502-182902_59426019","jobName":"paragraph_1689081958207_1172328520","progressUpdateIntervalMs":500,"status":"FINISHED","isSaved":true,"isSaving":false,"isUpdatingResults":false,"user":"Bharti_Jhalani","title":"Paragraph 19","text":"%spark2.pyspark\nz.show(df_core_State_P)","errorMessage":"","editMode":false,"results":{"code":"SUCCESS","msg":[{"data":"{\"paragraphId\":\"2J4UFQE98_20230502-182902_59426019\",\"dataframeUri\":\"/zeppelin/select?q=ParagraphId:2J4UFQE98_20230502-182902_59426019\"}\n","type":"TEXT"}]},"config":{"contentHeightCode":0,"contentHeightResult":0,"enabled":true,"expanded":true,"showCode":true,"showResults":true,"results":[{"bkfsRap":{"chartMode":"table","xColumn":null,"yColumn":null,"sizeColumn":null,"grouping":null,"variantChart":null,"pivotTable":{"cols":[],"rows":[],"vals":[]},"chartColors":{"lineChart":[],"multiBarChart":[],"pieChart":[],"pivotTable":[],"scatterChart":[],"stackedAreaChart":[]}}}]},"expandedConfig":null,"settings":{"params":{},"forms":{}},"progress":null,"dateStarted":"2023-07-12T15:48:49+0000","dateFinished":null,"lastCompletedTime":"2023-07-11 17:49:22","interpreter":"spark2.pyspark","name":"Paragraph 19","dateUpdated":null,"apps":[],"dateCreated":null},{"id":"20230502-165914_478881525","jobName":"paragraph_1689081958259_1152321577","progressUpdateIntervalMs":500,"status":"FINISHED","isSaved":true,"isSaving":false,"isUpdatingResults":false,"user":"Bharti_Jhalani","title":"Save the data subset  @ desired location","text":"%spark2.pyspark\n\n\n# SET THE NAME OF FILE YOU'RE SAVING\n\n\nfile_name = 'df_state_trial_P.csv'\n\n\n# DECLARATIONS\n\nimport os\nuser_name = spark.sparkContext.sparkUser()\nbucket = os.environ['BUCKET']\npath1 = \"s3a://\"+bucket+'/'+user_name+'/upload/'\n\nURI = sc._gateway.jvm.java.net.URI\nPath = sc._gateway.jvm.org.apache.hadoop.fs.Path\npath = 's3a://'+bucket+'/'+user_name+'/upload/*'\npath2 = 's3a://'+bucket+'/'+user_name+'/upload/'\nFileSystem = sc._gateway.jvm.org.apache.hadoop.fs.FileSystem\nconf = sc._jsc.hadoopConfiguration()\nuri = URI.create(path)\nfs = FileSystem.get(uri,conf)\ndf_core_State_P.repartition(1).write.csv(path1+file_name, mode=\"overwrite\", header= True)\n\n\n# PERFORM INITIAL FILE SAVE\n###  this creates a named folder with a nested file having a unique name\n\n#df_core_State.repartition(1).write.csv(path1+file_name, mode=\"overwrite\", header= True,  option(\"part-00000-e2e76132-1358-4db4-8ba2-ea762dce57c8-c000.csv\", \"\"))\n\n#df_core_State.repartition(1).write.csv(path1+file_name, mode=\"overwrite\", header=True,  option=\"part-00000-e2e76132-1358-4db4-8ba2-ea762dce57c8-c000.csv\")\n\n#df_core_State.repartition(1).write.csv(path1+file_name, mode=\"overwrite\", header=True, sep=\",\")\n#df_core_State.repartition(1).write.option(\"delimiter\", \",\").csv(path1+file_name)\n#df_core_State.repartition(1).write.csv(path1+file_name, mode=\"overwrite\", header= True)\n\n# REMOVE FILE FROM FOLDER AND RENAME\n###  this removes the unique file from the nested folder and assigns the custom name\n#Filename = fs.globStatus(Path(path2+file_name+\"/*\"))[1].getPath().getName()\n\n#fs.rename(Path(path2+file_name+'/'+ Filename),Path(path+file_name))\n\n","errorMessage":"","editMode":false,"results":null,"config":{"contentHeightCode":0,"contentHeightResult":0,"enabled":true,"expanded":true,"showCode":true,"showResults":true,"results":[]},"expandedConfig":null,"settings":{"params":{},"forms":{}},"progress":null,"dateStarted":"2023-07-12T15:48:53+0000","dateFinished":null,"lastCompletedTime":"2023-07-11 17:49:40","interpreter":"spark2.pyspark","name":"Save the data subset  @ desired location","dateUpdated":null,"apps":[],"dateCreated":null,"update":true},{"id":"20230502-170518_286951098","jobName":"paragraph_1689081958312_1216574644","progressUpdateIntervalMs":500,"status":"FINISHED","isSaved":true,"isSaving":false,"isUpdatingResults":false,"user":"Bharti_Jhalani","title":"Paragraph 19","text":"%spark2.pyspark\nprint(path1+file_name)\n\nprint(\"https://rap.bkicloud.com/bi/hdfs/*\"+file_name)","errorMessage":"","editMode":false,"results":{"code":"SUCCESS","msg":[{"data":"s3a://bki-rap-client-prod-stc/Bharti_Jhalani/upload/df_state_trial_P.csv\nhttps://rap.bkicloud.com/bi/hdfs/*df_state_trial_P.csv\n","type":"TEXT"}]},"config":{"contentHeightCode":0,"contentHeightResult":0,"enabled":true,"expanded":false,"showCode":true,"showResults":true,"results":[{"bkfsRap":{"chartMode":"table","xColumn":null,"yColumn":null,"sizeColumn":null,"grouping":null,"variantChart":null,"pivotTable":{"cols":[],"rows":[],"vals":[]},"chartColors":{"lineChart":[],"multiBarChart":[],"pieChart":[],"pivotTable":[],"scatterChart":[],"stackedAreaChart":[]}}}]},"expandedConfig":null,"settings":{"params":{},"forms":{}},"progress":null,"dateStarted":"2023-07-12T15:43:24+0000","dateFinished":null,"lastCompletedTime":"2023-07-11 17:49:40","interpreter":"spark2.pyspark","name":"Paragraph 19","dateUpdated":null,"apps":[],"dateCreated":null,"update":true},{"id":"20230502-170438_164382466","jobName":"paragraph_1689081958375_1193874459","progressUpdateIntervalMs":500,"status":"FINISHED","isSaved":true,"isSaving":false,"isUpdatingResults":false,"user":"Bharti_Jhalani","title":"Data Location for Power BI","text":"%spark2.pyspark\nimport os\nuser_name = spark.sparkContext.sparkUser()\nbucket = os.environ['BUCKET']\n\npath1 = \"s3a://\"+bucket+'/'+user_name+'/upload/'\n\ntest_P = (\n  spark.read\n  .option(\"header\", True)\n  .option(\"sep\", \",\")\n  .csv(path1+file_name)\n)\ndf.createOrReplaceTempView(\"df\")\n\nz.show(test_P)","errorMessage":"","editMode":false,"results":{"code":"SUCCESS","msg":[{"data":"{\"paragraphId\":\"2J4UFQE98_20230502-170438_164382466\",\"dataframeUri\":\"/zeppelin/select?q=ParagraphId:2J4UFQE98_20230502-170438_164382466\"}\n","type":"TEXT"}]},"config":{"contentHeightCode":0,"contentHeightResult":0,"enabled":true,"expanded":true,"showCode":true,"showResults":true,"results":[{"bkfsRap":{"chartMode":"table","xColumn":null,"yColumn":null,"sizeColumn":null,"grouping":null,"variantChart":null,"pivotTable":{"cols":[],"rows":[],"vals":[]},"chartColors":{"lineChart":[],"multiBarChart":[],"pieChart":[],"pivotTable":[],"scatterChart":[],"stackedAreaChart":[]}}}]},"expandedConfig":null,"settings":{"params":{},"forms":{}},"progress":null,"dateStarted":"2023-07-12T15:49:13+0000","dateFinished":null,"lastCompletedTime":"2023-07-11 17:50:10","interpreter":"spark2.pyspark","name":"Data Location for Power BI","dateUpdated":null,"apps":[],"dateCreated":null},{"id":"20230502-171750_1563859231","jobName":"paragraph_1689081958428_-1830267220","progressUpdateIntervalMs":500,"status":"FINISHED","isSaved":true,"isSaving":false,"isUpdatingResults":false,"user":"Bharti_Jhalani","title":"Paragraph 21","text":"%spark2.pyspark\n# Get column count\ncols = len(test_P.columns)\nprint(f\"DataFrame Columns count : {cols}\")\n\n# Get row count\nrows = test_P.count()\nprint(f\"DataFrame Rows count : {rows}\")","errorMessage":"","editMode":false,"results":{"code":"SUCCESS","msg":[{"data":"DataFrame Columns count : 66\nDataFrame Rows count : 49620\n","type":"TEXT"}]},"config":{"contentHeightCode":0,"contentHeightResult":0,"enabled":true,"expanded":true,"showCode":true,"showResults":true,"results":[{"bkfsRap":{"chartMode":"table","xColumn":null,"yColumn":null,"sizeColumn":null,"grouping":null,"variantChart":null,"pivotTable":{"cols":[],"rows":[],"vals":[]},"chartColors":{"lineChart":[],"multiBarChart":[],"pieChart":[],"pivotTable":[],"scatterChart":[],"stackedAreaChart":[]}}}]},"expandedConfig":null,"settings":{"params":{},"forms":{}},"progress":null,"dateStarted":"2023-07-12T15:49:26+0000","dateFinished":null,"lastCompletedTime":"2023-07-11 17:50:10","interpreter":"spark2.pyspark","name":"Paragraph 21","dateUpdated":null,"apps":[],"dateCreated":null,"update":true},{"id":"20230606-171246_1577606581","jobName":"paragraph_1689081958535_-1783712603","progressUpdateIntervalMs":500,"status":"READY","isSaved":true,"isSaving":false,"isUpdatingResults":false,"user":null,"title":"Paragraph 21","text":"%spark2.pyspark\n","errorMessage":"","editMode":true,"results":null,"config":{"contentHeightCode":0,"contentHeightResult":0,"enabled":true,"expanded":true,"showCode":true,"showResults":true,"results":[]},"expandedConfig":null,"settings":{"params":{},"forms":{}},"progress":null,"dateStarted":null,"dateFinished":null,"lastCompletedTime":"none","interpreter":"spark2.pyspark","name":"Paragraph 21","dateUpdated":null,"apps":[],"dateCreated":null,"update":true}],"interpreterBindings":[],"selectedText":"","enableAutoScroll":true,"paragraphsLoaded":true,"jobsLoaded":true,"noteType":"normal"}